{"version":3,"sources":["../src/index.js"],"names":["module","exports","context","req","dbName","collectionName","dbUsername","dbPassword","response","limit","uri","client","mongodb","MongoClient","connect","useNewUrlParser","collection","db","method","query","parseInt","find","toArray","res","insertOne","body","ops","deleteOne","_id","ObjectId","headers","JSON","stringify"],"mappings":";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,gBAAeC,OAAf,EAAwBC,GAAxB,EAA6B;AAC5C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,QAAJ;AACA,MAAIC,KAAK,GAAG,MAAZ,CAN4C,CAO5C;;AACA,QAAMC,GAAG,GAAI,aAAYJ,UAAW,IAAGC,UAAW,4BAA2BH,MAAO,EAApF,CAR4C,CAQ2C;;AAEvF,MAAIO,MAAM,GAAG,MAAMC,iBAAQC,WAAR,CAAoBC,OAApB,CAA4BJ,GAA5B,EAAiC;AAClDK,IAAAA,eAAe,EAAE;AADiC,GAAjC,CAAnB;AAGA,MAAIC,UAAU,GAAG,MAAML,MAAM,CAACM,EAAP,CAAUb,MAAV,EAAkBY,UAAlB,CAA6BX,cAA7B,CAAvB;;AACA,MAAIF,GAAG,CAACe,MAAJ,KAAe,KAAnB,EAA0B;AACxB,QAAIf,GAAG,CAACgB,KAAJ,CAAUV,KAAV,IAAmBW,QAAQ,CAACjB,GAAG,CAACgB,KAAJ,CAAUV,KAAX,CAAR,GAA4B,CAAnD,EAAsD;AACpDA,MAAAA,KAAK,GAAGW,QAAQ,CAACjB,GAAG,CAACgB,KAAJ,CAAUV,KAAX,CAAhB;AACD;;AACDD,IAAAA,QAAQ,GAAG,MAAMQ,UAAU,CACxBK,IADc,GAEdZ,KAFc,CAERA,KAFQ,EAGda,OAHc,EAAjB;AAID,GARD,MAQO,IAAInB,GAAG,CAACe,MAAJ,KAAe,MAAnB,EAA2B;AAChC,QAAIK,GAAG,GAAG,MAAMP,UAAU,CAACQ,SAAX,CAAqBrB,GAAG,CAACsB,IAAzB,CAAhB;AACAjB,IAAAA,QAAQ,GAAGe,GAAG,CAACG,GAAJ,CAAQ,CAAR,CAAX;AACD,GAHM,MAGA,IAAIvB,GAAG,CAACe,MAAJ,KAAe,KAAnB,EAA0B,CAChC,CADM,MACA;AACLV,IAAAA,QAAQ,GAAG,MAAMQ,UAAU,CAACW,SAAX,CAAqB;AACpCC,MAAAA,GAAG,EAAE,IAAIhB,iBAAQiB,QAAZ,CAAqB1B,GAAG,CAACsB,IAAJ,CAASG,GAA9B;AAD+B,KAArB,CAAjB;AAGD;;AACD1B,EAAAA,OAAO,CAACqB,GAAR,GAAc;AACZO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADG;AAIZL,IAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAexB,QAAf;AAJM,GAAd;AAMD,CArCD","sourcesContent":["import mongodb from 'mongodb';\n\nmodule.exports = async function(context, req) {\n  let dbName = '';\n  let collectionName = '';\n  let dbUsername = '';\n  let dbPassword = '';\n  let response;\n  let limit = 999999;\n  //const uri = `mongodb+srv://${dbUsername}:${dbPassword}@cluster0-ysdpk.mongodb.net/test?retryWrites=true&w=majority`;  //MongoDB Atlas\n  const uri = `mongodb://${dbUsername}:${dbPassword}@ds040309.mlab.com:40309/${dbName}`; // MLab\n\n  let client = await mongodb.MongoClient.connect(uri, {\n    useNewUrlParser: true\n  });\n  let collection = await client.db(dbName).collection(collectionName);\n  if (req.method === 'GET') {\n    if (req.query.limit && parseInt(req.query.limit) > 0) {\n      limit = parseInt(req.query.limit);\n    }\n    response = await collection\n      .find()\n      .limit(limit)\n      .toArray();\n  } else if (req.method === 'POST') {\n    let res = await collection.insertOne(req.body);\n    response = res.ops[0];\n  } else if (req.method === 'PUT') {\n  } else {\n    response = await collection.deleteOne({\n      _id: new mongodb.ObjectId(req.body._id)\n    });\n  }\n  context.res = {\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(response)\n  };\n};\n"],"file":"index.js"}